export const charPalExpScript = `const charUrl=window.location.href,platform=window.location.hostname;let authToken=null,tokenResolved=!1;const originalOpen=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(t,e,...a){console.log("open"),this.addEventListener("setRequestHeader",function(t){console.log(t.name),"authorization"!==t.name.toLowerCase()||tokenResolved||(authToken=t.value.trim(),tokenResolved=!0)}),originalOpen.apply(this,arguments)};const clickButton=t=>{let e=document.querySelector(t);return!!e&&(e.click(),!0)},fetchProfileImage=async t=>{let e=await fetch(t),a=await e.blob(),i=new FileReader;return new Promise((t,e)=>{i.onloadend=()=>t(i.result),i.onerror=e,i.readAsDataURL(a)})},exportCharacter=t=>{let e={image:t.image,name:t.name,personality:t.personality,initialMessage:t.initialMessage,scenario:"",alternateInitialMessages:[]},a=new Date().toLocaleString(),i=\`// Made FOR the Experience. From the unformed, to the spark.
// Handle with care. It remembers.

// ${a} at https://palmirror.vercel.app

\`,r=JSON.stringify(e,null,2),n=i+r,o=new Blob([n],{type:"application/octet-stream"}),c=URL.createObjectURL(o),s=document.createElement("a");s.href=c,s.download=\`${e.name||"character"}-ucm.plmc\`,document.body.appendChild(s),s.click(),document.body.removeChild(s),URL.revokeObjectURL(c)},exportMethod1=async()=>{try{let t=new URL(\`https://neo.${platform.split(".").slice(-2).join(".")}/character/v1/get_character_info\`),e=charUrl.split("/").slice(-1)[0],a=await fetch(t.toString(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({external_id:e})});if(!a.ok)throw Error("Failed to fetch character info.");let i=await a.json(),r=new URL(\`https://${platform.split(".").slice(-2)[0]}ai.io/i/250/static/avatars/${i.character.avatar_file_name}\`),n=await fetchProfileImage(r.toString()),o={image:n,name:i.character.participant__name,personality:i.character.definition||i.character.description,initialMessage:i.character.greeting};return exportCharacter(o),!0}catch(c){return!1}},exportMethod2=async()=>{let t=t=>{let e=t.match(/\/characters\/([a-f0-9-]+)_/);return e?e[1]:null},e=async()=>{let e=t(charUrl),a=window.location.origin,i=new URL(\`/hampter/characters/${e}\`,a),r=await fetch(i.toString(),{headers:{Authorization:authToken}});if(!r.ok)throw Error("Failed to fetch character info.");return r.json()},a=async()=>{if(!clickButton("#root > div > main > div > div.css-26c7er > div:nth-child(1) > div > div.chakra-stack.css-fu9q4m > div.css-21dtu2 > div.css-1bntj9o > div.css-gmuwbf > button"))throw Error("Button not found.");return new Promise((t,e)=>{let a=setInterval(()=>{authToken&&(clearInterval(a),t(authToken))},100)})};try{authToken||(await a(),clickButton("#root > div > main > div > div.css-26c7er > div:nth-child(1) > div > div.chakra-stack.css-fu9q4m > div.css-21dtu2 > div.css-1bntj9o > div.css-gmuwbf > button"));let i=await e(),r={image:\`https://ella.${platform.split(".").slice(-2).join(".")}/bot-avatars/${i.avatar}\`,name:i.name,personality:i.personality||i.description,initialMessage:i.first_message,scenario:i.scenario};return exportCharacter(r),!0}catch(n){return!1}};(async()=>{let t=await exportMethod1();if(!t){console.log("Trying method 2");let e=await exportMethod2();e||alert(\`Exporting failed.. Looks like this script isn't compatible with ${platform.split(".").slice(-2).join(".")} yet.\`)}})();`
